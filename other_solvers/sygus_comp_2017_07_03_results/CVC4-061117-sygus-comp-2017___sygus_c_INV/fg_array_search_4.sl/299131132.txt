0.00/0.02	(define-fun findIdx ((y1 Int) (y2 Int) (y3 Int) (y4 Int) (k1 Int)) Int (ite (or (>= (+ y1 (* -1 y2)) 0) (>= (+ y2 (* -1 y3)) 0) (>= (+ y3 (* -1 y4)) 0)) (ite (and (or (>= (+ y1 (* -1 y2)) 0) (>= (+ y2 (* -1 y3)) 0) (>= (+ y3 (* -1 y4)) 0) (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1))) (or (>= (+ y1 (* -1 y2)) 0) (>= (+ y2 (* -1 y3)) 0) (>= (+ y3 (* -1 y4)) 0) (>= (+ y3 (* -1 k1)) 0) (not (>= (+ y4 (* -1 k1)) 1)))) -1 (ite (or (>= (+ y1 (* -1 y2)) 0) (>= (+ y2 (* -1 y3)) 0) (>= (+ y3 (* -1 y4)) 0) (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1))) 3 (ite (or (>= (+ y3 (* -1 k1)) 0) (not (>= (+ y4 (* -1 k1)) 1))) 2 0))) (ite (>= (+ y1 (* -1 k1)) 1) 0 (ite (not (>= (+ y4 (* -1 k1)) 0)) (ite (and (or (>= (+ y1 (* -1 k1)) 0) (not (>= (+ y2 (* -1 k1)) 1))) (or (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1))) (or (>= (+ y3 (* -1 k1)) 0) (not (>= (+ y4 (* -1 k1)) 1)))) 4 0) (ite (and (not (>= (+ y1 (* -1 k1)) 0)) (>= (+ y2 (* -1 k1)) 1)) (ite (or (and (not (>= (+ y2 (* -1 k1)) 0)) (>= (+ y3 (* -1 k1)) 1)) (and (not (>= (+ y3 (* -1 k1)) 0)) (>= (+ y4 (* -1 k1)) 1))) 0 1) (ite (and (or (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1))) (or (>= (+ y3 (* -1 k1)) 0) (not (>= (+ y4 (* -1 k1)) 1)))) -1 (ite (or (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1))) 3 (ite (or (>= (+ y3 (* -1 k1)) 0) (not (>= (+ y4 (* -1 k1)) 1))) 2 0))))))))
0.00/0.02	EOF
