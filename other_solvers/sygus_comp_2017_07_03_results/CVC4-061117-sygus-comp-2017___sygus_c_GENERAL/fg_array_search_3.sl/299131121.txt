0.00/0.01	(define-fun findIdx ((y1 Int) (y2 Int) (y3 Int) (k1 Int)) Int (ite (or (>= (+ y1 (* -1 y2)) 0) (>= (+ y2 (* -1 y3)) 0)) 2 (ite (and (not (>= (+ y1 (* -1 k1)) 0)) (>= (+ y2 (* -1 k1)) 1)) 1 (ite (>= (+ y1 (* -1 k1)) 1) (ite (and (>= (+ y3 (* -1 k1)) 0) (or (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1)))) 0 1) (ite (>= (+ y3 (* -1 k1)) 0) 2 (ite (or (>= (+ y2 (* -1 k1)) 0) (not (>= (+ y3 (* -1 k1)) 1))) 3 1))))))
0.00/0.02	EOF
