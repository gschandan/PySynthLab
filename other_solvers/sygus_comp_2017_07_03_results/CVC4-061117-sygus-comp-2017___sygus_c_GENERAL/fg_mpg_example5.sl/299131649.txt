0.00/0.02	(define-fun eq1 ((x Int) (y Int)) Int (ite (and (>= (+ x y) 2) (or (and (not (>= (+ x y) 3)) (= x (+ 1 (* -1 y)))) (and (>= (+ x y) 3) (or (and (not (>= (+ x y) 4)) (= x (+ 3 (* -1 y)))) (and (>= (+ x y) 4) (or (and (not (>= (+ x y) 5)) (= x (+ 1 (* -1 y)))) (and (>= (+ x y) 5) (or (and (not (>= (+ x y) 6)) (= x (+ 11 (* -1 y)))) (and (>= (+ x y) 6) true))))))))) (+ -60 (* 60 x) (* 60 y)) (ite (or (= x (+ -1 (* -1 y))) (and (>= (+ x y) 2) (or (and (not (>= (+ x y) 3)) false) (and (>= (+ x y) 3) (or (and (not (>= (+ x y) 4)) (= x (+ -1 (* -1 y)))) (and (>= (+ x y) 4) (or (and (not (>= (+ x y) 5)) (= x (+ -9 (* -1 y)))) (and (>= (+ x y) 5) (or (and (not (>= (+ x y) 6)) true) (and (>= (+ x y) 6) (= x (+ 11 (* -1 y))))))))))))) (+ 50 (* 50 x) (* 50 y)) (ite (and (>= (+ x y) 2) (or (and (not (>= (+ x y) 3)) (= x (+ 1 (* -1 y)))) (and (>= (+ x y) 3) (or (and (not (>= (+ x y) 4)) (= x (+ 7 (* -1 y)))) (and (>= (+ x y) 4) (or (and (not (>= (+ x y) 5)) true) (and (>= (+ x y) 5) (or (and (not (>= (+ x y) 6)) (= x (+ -9 (* -1 y)))) (and (>= (+ x y) 6) (= x (+ 1 (* -1 y)))))))))))) (+ -40 (* 40 x) (* 40 y)) (ite (and (>= (+ x y) 2) (or (and (not (>= (+ x y) 3)) true) (and (>= (+ x y) 3) (or (and (not (>= (+ x y) 4)) (= x (+ -5 (* -1 y)))) (and (>= (+ x y) 4) (or (and (not (>= (+ x y) 5)) (= x (+ 1 (* -1 y)))) (and (>= (+ x y) 5) (or (and (not (>= (+ x y) 6)) false) (and (>= (+ x y) 6) (= x (+ 1 (* -1 y)))))))))))) (+ -20 (* 20 x) (* 20 y)) (+ 10 (* 10 x) (* 10 y)))))))
0.00/0.03	EOF
