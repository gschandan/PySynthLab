0.00/0.31	
0.00/0.31	(define-fun f1 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ -2 (* 2 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ -1 (* 2 P1)) 3) (div (+ 6 (* 2 P1)) 3))))
0.00/0.32	(define-fun f2 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ -4 (* 4 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ -2 (* 4 P1)) 3) (div (+ 12 (* 4 P1)) 3))))
0.00/0.32	(define-fun f3 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (+ -2 P1) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (+ -1 P1) (+ 6 P1))))
0.00/0.32	(define-fun f4 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ -8 (* 8 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ -4 (* 8 P1)) 3) (div (+ 24 (* 8 P1)) 3))))
0.00/0.32	(define-fun f5 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ -10 (* 10 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ -5 (* 10 P1)) 3) (div (+ 30 (* 10 P1)) 3))))
0.00/0.32	(define-fun g1 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ -2 (* -1 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ -1 (* -1 P1)) 3) (div (+ 6 (* -1 P1)) 3))))
0.00/0.33	(define-fun g2 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ 1 (* -1 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ 2 (* -1 P1)) 3) (div (+ 9 (* -1 P1)) 3))))
0.00/0.34	(define-fun g3 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ 4 (* -1 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ 5 (* -1 P1)) 3) (div (+ 12 (* -1 P1)) 3))))
0.00/0.34	(define-fun g4 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) (div (+ 8 (* -2 P1)) 3) (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) (div (+ 10 (* -2 P1)) 3) (div (+ 24 (* -2 P1)) 3))))
0.00/0.35	(define-fun g5 ((p1 Int) (P1 Int)) Int (ite (and (= (div (+ -4 (* 4 P1)) 3) (* 2 (div (+ -2 (* 2 P1)) 3))) (= (div (+ -4 (* 4 P1)) 3) (+ -2 (* 2 P1) (* -1 (div (+ -2 (* 2 P1)) 3)))) (= (div (+ -8 (* 8 P1)) 3) (* 2 (div (+ -4 (* 4 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ (* -1 (div (+ -8 (* 8 P1)) 3)) (div (+ -10 (* 10 P1)) 3))) (= P1 (+ (div (+ -2 (* 2 P1)) 3) (* -1 (div (+ -2 (* -1 P1)) 3)))) (= (div (+ -2 (* -1 P1)) 3) (+ -1 (div (+ 1 (* -1 P1)) 3))) (= (div (+ 1 (* -1 P1)) 3) (+ -1 (div (+ 4 (* -1 P1)) 3))) (= (div (+ 8 (* -2 P1)) 3) (* 2 (div (+ 4 (* -1 P1)) 3))) (= (div (+ -2 (* 2 P1)) 3) (+ 2 (* -1 (div (+ 8 (* -2 P1)) 3))))) 2 (ite (and (= (div (+ -2 (* 4 P1)) 3) (* 2 (div (+ -1 (* 2 P1)) 3))) (= (div (+ -2 (* 4 P1)) 3) (+ -1 (* 2 P1) (* -1 (div (+ -1 (* 2 P1)) 3)))) (= (div (+ -4 (* 8 P1)) 3) (* 2 (div (+ -2 (* 4 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ (* -1 (div (+ -4 (* 8 P1)) 3)) (div (+ -5 (* 10 P1)) 3))) (= P1 (+ (div (+ -1 (* 2 P1)) 3) (* -1 (div (+ -1 (* -1 P1)) 3)))) (= (div (+ -1 (* -1 P1)) 3) (+ -1 (div (+ 2 (* -1 P1)) 3))) (= (div (+ 2 (* -1 P1)) 3) (+ -1 (div (+ 5 (* -1 P1)) 3))) (= (div (+ 10 (* -2 P1)) 3) (* 2 (div (+ 5 (* -1 P1)) 3))) (= (div (+ -1 (* 2 P1)) 3) (+ 3 (* -1 (div (+ 10 (* -2 P1)) 3))))) 3 10)))
0.00/0.35	EOF
