0.00/0.04	
0.00/0.05	(define-fun eq2 ((x Int) (y Int) (z Int) (z1 Int)) Int (ite (or (and (>= (+ (* 2 x) y z (* -1 z1)) 0) (or (and (not (>= (+ x (* -1 y) z1) 1)) (= (* 3 z) (+ -44 (* -6 x) (* 20 y) (* -5 z1)))) (and (>= (+ x (* -1 y) z1) 1) (= (* 9 y) (+ -44 (* 16 x) (* 18 z) (* -20 z1)))))) (and (not (>= (+ (* 2 x) y z (* -1 z1)) 0)) (or (and (not (>= (+ x (* 3 z) z1) -8)) (= (* 5 x) (+ 66 (* 15 y) (* 12 z) (* 17 z1)))) (>= (+ x (* 3 z) z1) -8)))) (+ -55 (* 16 x) (* 18 z) (* 5 z1)) (ite (or (and (>= (+ (* 2 x) y z (* -1 z1)) 0) (or (and (= x (+ -110 (* 5 y) (* -15 z) (* -22 z1))) (not (>= (+ (* 4 y) (* -15 z) (* -21 z1)) 111))) (and (>= (+ x (* -1 y) z1) 1) (= (* 3 z1) (+ 22 (* 11 x) (* 6 y) (* 30 z)))))) (and (not (>= (+ (* 2 x) y z (* -1 z1)) 0)) (or (not (>= (+ x (* 3 z) z1) -8)) (and (>= (+ x (* 3 z) z1) -8) (= (* 5 x) (+ 66 (* 15 y) (* 12 z) (* 17 z1))))))) (+ 11 (* 11 x) (* 15 y) (* 30 z) (* 22 z1)) (ite (or (and (>= (+ (* 2 x) y z (* -1 z1)) 0) (or (not (>= (+ x (* -1 y) z1) 1)) (and (>= (+ x (* -1 y) z1) 1) (= (* 10 x) (+ 88 (* -11 y) (* -15 z) (* 25 z1)))))) (and (not (>= (+ (* 2 x) y z (* -1 z1)) 0)) (or (and (= x (+ -110 (* 5 y) (* -15 z) (* -22 z1))) (not (>= (+ (* 5 y) (* -12 z) (* -21 z1)) 102))) (and (>= (+ x (* 3 z) z1) -8) (= (* 3 z) (+ -44 (* -6 x) (* 20 y) (* -5 z1))))))) (+ -99 (* 10 x) (* 20 y) (* 15 z)) (+ -11 (* 9 y) (* 25 z1))))))
0.00/0.05	EOF
